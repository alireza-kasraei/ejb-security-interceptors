# Batch script to enable elytron for the quickstart application in the JBoss EAP server

# Start batching commands
batch

# Add security domain mapping in EJB3 subsystem to enable elytron for the quickstart deployment
/subsystem=ejb3/application-security-domain=quickstart-domain:add(security-domain=ApplicationDomain)

# Add the authentication configuration and authentication context that will be used for outbound connections
/subsystem=elytron/authentication-configuration=ejb-outbound-configuration:add(authentication-name=ConnectionUser, realm=ApplicationRealm, credential-reference={clear-text=ConnectionPassword1!},sasl-mechanism-selector="-JBOSS-LOCAL-USER #ALL")
/subsystem=elytron/authentication-context=ejb-outbound-context:add(match-rules=[{authentication-configuration=ejb-outbound-configuration}])

/subsystem=elytron/constant-permission-mapper=constant-permission-mapper:add(permissions=[])

/subsystem=elytron/permission-set=run-as-principal-permission:add(permissions=[{class-name="org.wildfly.security.auth.permission.RunAsPrincipalPermission", target-name="*", }])

/subsystem=elytron/simple-permission-mapper=default-permission-mapper:remove()

/subsystem=elytron/simple-permission-mapper=default-permission-mapper:add(permission-mappings=[\
{match-all=true,permission-sets=[{permission-set=login-permission}, {permission-set=default-permissions}, {permission-set=run-as-principal-permission}]},\
{permission-sets=[{permission-set=default-permissions}],principal=anonymous}])


# Add permissions to allow switching identities in the server-side interceptor
/subsystem=elytron/constant-permission-mapper=constant-permission-mapper:list-add(name=permissions,value={class-name=org.wildfly.security.auth.permission.RunAsPrincipalPermission,target-name=AppUserOne})
/subsystem=elytron/constant-permission-mapper=constant-permission-mapper:list-add(name=permissions,value={class-name=org.wildfly.security.auth.permission.RunAsPrincipalPermission,target-name=AppUserTwo})

# Add the outbound socket binding
/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=ejb-outbound:add(host=localhost,port=8080)

# Add the remote outbound connection and set the sasl-authentication-factory in the http-connector
/subsystem=remoting/remote-outbound-connection=ejb-outbound-connection:add(outbound-socket-binding-ref=ejb-outbound, authentication-context=ejb-outbound-context)
/subsystem=remoting/http-connector=http-remoting-connector:write-attribute(name=sasl-authentication-factory,value=application-sasl-authentication)

# Run the batch commands
run-batch

# Reload the server configuration
reload


